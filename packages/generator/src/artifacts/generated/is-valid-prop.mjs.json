{
  "content": "// src/index.ts\nvar userGeneratedStr = \"\";\nvar userGenerated = userGeneratedStr.split(\",\");\nvar userGeneratedPrefixes = \"\";\nvar prefixes = \"Webkit,accent,align,animation,aspect,backdrop,backface,background,block,border,box,break,caption,caret,clip,color,column,contain,container,content,counter,empty,flex,font,forced,grid,hanging,hyphenate,image,ime,initial,inline,input,inset,justify,letter,line,list,margin,mask,masonry,math,mix,object,offset,outline,overflow,overscroll,padding,paint,perspective,place,pointer,print,row,ruby,scrollbar,scroll,shape,tab,table,text,touch,transform,transition,unicode,user,vertical,view,white,word,writing\";\nvar regexes = Array.from(prefixes.split(\",\")).concat(userGeneratedPrefixes.split(\",\")).map((prefix) => new RegExp(\"^\" + prefix + \"[A-Z][a-zA-Z]*\"));\nvar cssPropertiesStr = \"all,animation,appearance,azimuth,background,border,bottom,caret,clear,clip,color,columns,contain,container,content,cursor,direction,display,filter,flex,float,font,gap,grid,height,hyphens,inset,isolation,left,margin,mask,maxBlockSize,maxHeight,maxInlineSize,maxLines,maxWidth,minBlockSize,minHeight,minInlineSize,minWidth,offset,opacity,order,orphans,outline,overflow,padding,page,pageBreakAfter,pageBreakBefore,pageBreakInside,perspective,position,quotes,resize,right,rotate,scale,top,transform,transition,translate,visibility,widows,width,willChange,zIndex,zoom\";\nvar allCssProperties = cssPropertiesStr.split(\",\").concat(userGenerated);\nvar properties = new Set(allCssProperties);\nfunction memo(fn) {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (arg) => {\n    if (cache[arg] === void 0)\n      cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\nvar cssPropertySelectorRegex = /&|@/;\nvar isCssProperty = /* @__PURE__ */ memo((prop) => {\n  return properties.has(prop) || regexes.some((regex) => regex.test(prop)) || prop.startsWith(\"--\") || cssPropertySelectorRegex.test(prop);\n});\nexport {\n  allCssProperties,\n  isCssProperty\n};\n"
}